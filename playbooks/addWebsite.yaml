---
# Variable en entrée :
# GIT
# ACL
# FQDN
- name: Mettre en place un service web
  hosts: localhost
  become: yes
  gather_facts: no
  tasks:
    - name: Get info container
      community.docker.docker_container_info:
        name: "{{ item }}"
      with_items: "{{ groups['test'] }}"
      register: result

    
    - name: Trouver Les hôtes de libre
      set_fact:
        ListFreeHosts: "{{ ListFreeHosts | default([]) + [item.invocation.module_args.name] }}"
      when: item.exists == False
      with_items: "{{result.results}}"

    - name: Annonce du premier hote de libre (si disponible)
      ansible.builtin.debug:
        msg: "Le hôte attribué à cet ajout est : {{ ListFreeHosts[0] }}"
      when: ListFreeHosts[0] is defined

    - name: Création variable du premier hote libre
      set_fact:
        Host: "{{ ListFreeHosts[0] }}"
      when: ListFreeHosts[0] is defined

    - name: Arrêter le playbook si Host est vide
      fail:
        msg: "Host est vide. Arrêt du playbook."
      when: Host is not defined
      
    - name: Créer le container {{ Host }}
      docker_container:
        name: "{{Host}}"
        image: debian-ssh-py:v14
        state: started
        restart_policy: always
        interactive: yes
        tty: yes
        detach: true
        labels:
          FQDN: "{{ FQDN }}"
        volumes:
          - "/home/user-ansible/projetAnsible/ressources/keys/{{Host}}:/root/keys/"
          - "/home/user-ansible/projetAnsible/ressources/web/{{Host}}:/var/www/{{ FQDN }}"
        networks:
          - name: LAN_ANSIBLE
            ipv4_address: "{{ hostvars[Host]['ansible_host'] }}"
    - name: Attendre 10 secondes le temps que la clef SSH se génère.
      ansible.builtin.pause:
        seconds: 10

- name: Installe les paquets de base
  hosts: "{{ hostvars['localhost']['Host'] }}"
  become: yes
  gather_facts: no
  roles:
    - base_packages

- name: Cloner le projet git
  hosts: "{{ hostvars['localhost']['Host'] }}"
  become: yes
  gather_facts: no
  tasks:
    - name: Cloner le projet git
      command: git clone {{ GIT }} /var/www/{{FQDN}}
      when: GIT is defined

- name: Mise en place de la conf Apache dans le reverse proxy
  hosts: proxyinverse1
  become: yes
  gather_facts: no
  vars:
    - FQDN: "{{FQDN}}"
    - Name: "{{ hostvars['localhost']['Host'] }}"
    - Ipv4Port: "80"
    - Ipv4Dest: "{{ hostvars[Name]['ansible_host'] }}"
    - ACL: "{{ ACL }}"
    # - template: "ReverseProxyWebsite_no-ACL.j2"
  roles:
    - template_proxyinverse

- name: Mise en place de la conf Apache dans le container {{ hostvars['localhost']['Host'] }}
  hosts: "{{ hostvars['localhost']['Host'] }}"
  become: yes
  gather_facts: no
  vars:
    - Name: "{{ hostvars['localhost']['Host'] }}"
    - IPv4Listen: "*"
    - TCPListen: "80"
    - FQDN: "{{ FQDN }}"
    - path: "/var/www/{{FQDN}}"
    - Logs: ""
    - template: "HTTP-VH.j2"
  roles:
    - template_website

- name: Afficher adresse IP
  hosts: localhost
  tasks:
    - ansible.builtin.debug:
      msg: "L'adresse IP est : {{ hostvars[hostvars['localhost']['ansible_host']] }}"
        